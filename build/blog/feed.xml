<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Matthew Machuga</title>
  <subtitle>I like to build things and help people</subtitle>
  <id>http://matthewmachuga.com/blog</id>
  <link href="http://matthewmachuga.com/blog"/>
  <link href="http://matthewmachuga.com/blog/feed.xml" rel="self"/>
  <updated>2019-02-03T14:30:00-05:00</updated>
  <author>
    <name>Matthew Machuga</name>
  </author>
  <entry>
    <title>Grokkable Concurrency in JavaScript</title>
    <link rel="alternate" href="http://matthewmachuga.com/blog/2019/grokkable-concurrency-in-javascript.html"/>
    <id>http://matthewmachuga.com/blog/2019/grokkable-concurrency-in-javascript.html</id>
    <published>2019-02-03T14:30:00-05:00</published>
    <updated>2019-02-03T14:27:29-05:00</updated>
    <author>
      <name>Matthew Machuga</name>
    </author>
    <content type="html">&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is the first post in a series on Concurrent Programming in JavaScript.&lt;/p&gt;

&lt;h2&gt;Introduction to the Problem&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://callbackhell.com/"&gt;Callback Hell&lt;/a&gt; is something you’ll hear many JavaScript developers refer to, and not endearingly. It is a very real place, and is to be feared, but it is fortunately something that can be avoided with a number of tactics. We will be reviewing a prime example of Callback Hell code to study and begin understanding its weaknesses so that we can begin to learn ways to clean it up. The logical place to starts seems to be with  focusing solely on callbacks, but there is so much more to learn!&lt;/p&gt;

&lt;h2&gt;Problems in the Inferno&lt;/h2&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;const get = require(&amp;#39;./get&amp;#39;); // get(url, callback)

const githubApi = &amp;#39;https://api.github.com&amp;#39;;
const githubEventsUrlFor = username =&amp;gt; `${githubApi}/users/${username}/events`;
const githubRepoUrlFor = repo =&amp;gt; `${githubApi}/repos/${repo}`;

const fetchReposForLatestActivity = (user, callback) =&amp;gt; {
  let timeout = setTimeout(function() {
    callback(new Error(&amp;#39;Timed out&amp;#39;));
  }, 3000);

  get(githubEventsUrlFor(user), (err, allEvents) =&amp;gt; {
    if (err) {
      return callback(err);
    }

    const events = allEvents.slice(0, 3);
    const repos = [];
    let remainingCount = events.length;

    events.forEach(event =&amp;gt; {
      get(githubRepoUrlFor(event.repo.name), (err, data) =&amp;gt; {
        if (err) {
          return callback(err);
        }

        repos.push({
          author: data.owner.login,
          avatar: data.owner.avatar_url,
          name: data.name,
          full_name: data.full_name,
          url: data.html_url,
          description: data.description
        });

        remainingCount -= 1;

        if (remainingCount &amp;lt;= 0) {
          clearTimeout(timeout);
          callback(null, repos)
        }
      });
    });
  });
};

fetchReposForLatestActivity(&amp;#39;machuga&amp;#39;, (err, repos) =&amp;gt; {
  if (err) {
    console.error(err);
    return;
  }

  console.log(repos);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above figure is an example of  some code that starts pushing out to the right pretty quickly. What do I mean by pushing to the right?&lt;/p&gt;

&lt;h2&gt;Nesting&lt;/h2&gt;

&lt;p&gt;Look above at how the code starts indenting further and further to the right depending on which level of callback nesting we&amp;rsquo;re at. At the deepest point, we are 3 callbacks deep, and there is even a bit of iteration involved to push it out further - which adds its own extra level of complexity we&amp;rsquo;ll address in a moment. To be clear, it is not necessarily the number of spaces (that&amp;rsquo;s right, not tabs, internet) from the left margin that cause conflict; though harder to read, the biggest issue it causes is nested context.
The most deeply nested part in our code knows about and mutates the &lt;code&gt;timeout&lt;/code&gt; variable we set in the upper-most &lt;code&gt;fetchReposForLatestActivity&lt;/code&gt; function, and also knows about the original callback sent into that function. Even at the current length, but doubly so if this function was longer, it&amp;rsquo;d be very easy to start losing mental context of what variable is declared where. It&amp;rsquo;s hard to remember what variables are still in scope, what you&amp;rsquo;ve accidentally changed, etc. from parent scopes. It is a very easy way to cause unexpected behavior and a good way to lose yourself in your code. Additionally, if you aren&amp;rsquo;t cautious how you nest your scopes, letting variables from higher lexical scopes be used in lower ones, it can make extracting functions a bit of a challenge later.&lt;/p&gt;

&lt;h2&gt;Error Handling&lt;/h2&gt;

&lt;p&gt;Explicit error handling is a good thing. Go, for example, embraces it as a first class citizen, where functions can return an error along with the intended return value. However, in JavaScript, error handling is all conventional, and thus sometimes things can surprise you. For instance, with traditional NodeJS style error handling (used in this figure), when errors are thrown from a function, the error should be sent as the first argument of the callback. Another style that pops up is the &lt;code&gt;errback&lt;/code&gt;, where there is a second, separate callback to handle the error case, and the success callback does not receive an error argument.
Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;function doAThing(errback, callback) {
  if(wrongThingHappens) {
      return errback(new Error(&amp;#39;oops&amp;#39;));
  }
  callback(&amp;#39;success&amp;#39;);
}

doAThing(console.error, console.log)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are other libraries that will, intentionally or unintentionally, throw the error in a destructive way (not sending it to the callback) if the error is thrown synchronously. This is a great way to cause unexpected behavior, and has caused me some grief over the years. This is definitely an area where consistency can help.&lt;/p&gt;

&lt;h2&gt;Only-Once&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s take a look at how we call our &lt;code&gt;fetchReposForLatestActivity&lt;/code&gt; function:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;fetchReposForLatestActivity(&amp;#39;machuga&amp;#39;, (err, repos) =&amp;gt; {
  if (err) {
    console.error(err);
    return;
  }

  console.log(repos);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Despite the size of the underlying function and numerous HTTP calls it protects us from worrying about, it is a pretty simple function. We pass it a &lt;code&gt;username&lt;/code&gt; and a callback, and it will either send us an error or a list of repositories back. Great! Now what if we want to cache those repositories for a bit to avoid needing to make extraneous calls over the network? I have seen this done in so many terrifying ways (and done a few myself when I started writing JS) that I will not enumerate in this post, but the gist of it: If you are using timeouts or setting a cache value in a higher scope without ensuring you have something like a lock to prevent updating a variable multiple times, you are probably on the wrong path.  Even our iteration over repos in the above examples isn&amp;rsquo;t perfect.&lt;/p&gt;

&lt;p&gt;This can introduce challenges for structuring code because if you want to have any other code that uses the list of repos, they must be called from within the above callback to have the &lt;code&gt;repos&lt;/code&gt; variable in scope. This comes right back to nesting. The solutions to these problems aren&amp;rsquo;t hard, they just take a shift in thinking if you&amp;rsquo;ve only done synchronous programming up until this point.&lt;/p&gt;

&lt;h2&gt;Iteration with Callbacks&lt;/h2&gt;

&lt;p&gt;Here be dragons.  Let&amp;rsquo;s take a look at a shortened version of our iteration above:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;const repos = [];
let remainingCount = 0;

events.forEach(event =&amp;gt; {
  get(githubRepoUrlFor(event.repo.name), (err, data) =&amp;gt; {
    if (err) {
      return callback(err);
    }

    repos.push(...);

    remainingCount -= 1;

    if (remainingCount &amp;lt;= 0) {
      clearTimeout(timeout);
      callback(null, repos)
    }
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What we do is set a variable, &lt;code&gt;remainingCount&lt;/code&gt; to be equal to the length of the array we are using. In our case, we have 3 events. Then every time a callback from &lt;code&gt;get&lt;/code&gt; gets executed we decrement the value of &lt;code&gt;remainingCount&lt;/code&gt; by one, and then when &lt;code&gt;remainingCount&lt;/code&gt; becomes &lt;code&gt;0&lt;/code&gt;, we know all &lt;code&gt;get&lt;/code&gt; requests have completed and can execute the callback passed into our &lt;code&gt;fetchReposForLatestActivity&lt;/code&gt; function. We also clear the timeout set earlier in the function so that if any HTTP requests get stuck we can still abort the &lt;code&gt;fetchReposForLatestActivity&lt;/code&gt;  function. If any HTTP requests come back with an error, then we have chosen to fail immediately and call  &lt;code&gt;callback&lt;/code&gt; with the error we received. It should be noted that I did not handle any actual clean up of cancelling HTTP requests and other such things for brevity.&lt;/p&gt;

&lt;h2&gt;Cleaning up the Code&lt;/h2&gt;

&lt;p&gt;How can we clean up these various things? That’s what we’re going to cover over the next several blog posts - first with callbacks, then with Promises and other constructs. We’ll also go into more advanced patterns for handling common situations you’ll find yourself in when dealing with processing data, like sequential processing, concurrent processing, and more. I’d like to keep each one succinct enough to read quickly and search back through for quick references as you need them, so I will try to keep the amount of material to learn in each post limited. This will go from beginner to more advanced topics fairly quickly.&lt;/p&gt;

&lt;p&gt;If you want to keep up to date with updates, please subscribe to my &lt;a href="https://matthewmachuga.com"&gt;mailing list&lt;/a&gt; or &lt;a href="https://matthewmachuga.com/blog/feed.xml"&gt;RSS feed&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Loss and Meaning</title>
    <link rel="alternate" href="http://matthewmachuga.com/blog/2018/loss-and-meaning.html"/>
    <id>http://matthewmachuga.com/blog/2018/loss-and-meaning.html</id>
    <published>2018-04-27T20:00:00-04:00</published>
    <updated>2018-11-04T21:51:01-05:00</updated>
    <author>
      <name>Matthew Machuga</name>
    </author>
    <content type="html">&lt;p&gt;I started writing pieces of this down a bit over a week ago, sitting alone in a
calm hospital cafeteria of an out of town. My wife was waiting on her dinner in
her room, and I was slowly and distantly chewing on my dinner.&lt;/p&gt;

&lt;p&gt;At this point it had been 28 hours after learning my unborn child no longer had
a heartbeat.&lt;/p&gt;

&lt;h1&gt;Our Story&lt;/h1&gt;

&lt;p&gt;The day before started off so jovial. I met a new employee at work and
mentioned that I had 2 kids and my third on the way. I told her, in fact, I’d
be going to find out the sex of the baby that afternoon. Evidently our newer
doctor’s office favors anatomy scans after 20 weeks, so this was actually
fairly late for us compared to our last two girls.&lt;/p&gt;

&lt;p&gt;At the appointment we got taken back nearly a half hour late and by this time
were very anxious to find out if our baby was a girl or boy. The sonograph tech
got everything set up, pressed the device against my wife’s belly, and there
was our baby — so much bigger than our last sonogram 8 weeks prior! The images
were a bit off, which I guess is normal if the bladder is full. After about a
minute the tech asked my wife to empty her bladder. My wife and I laughed hard
and she complied. As my wife went into the restroom, the tech mentioned she’d
be back in a minute and left the room. My wife came back out shortly after, we
joked around a bit more, and then after about 5 minutes started to get
impatient and frustrated.&lt;/p&gt;

&lt;p&gt;We assumed that she started chatting with someone or took a smoke break. I
peeked out into the hall and could hear her talking to someone. Then my wife
wondered aloud from behind me something we hadn’t considered, “I wonder if
something’s wrong…”&lt;/p&gt;

&lt;p&gt;The tech came back down the hall and was bringing a nurse or someone with
her — I can’t remember who she was at this point. When they came into the room
she introduced herself and I cut her short asking if something was wrong. The
next time she opened her mouth she broke us.&lt;/p&gt;

&lt;p&gt;She told us the baby had no heartbeat.&lt;/p&gt;

&lt;p&gt;My wife started bawling and I don’t remember anything else she told us until I
asked her to check again and held out hope that they were wrong. They scanned
for quite a while. I could see my baby there on the screen — arms, legs, head,
and ribs. But there was no familiar fluttering between those ribs or blood
flowing. We were told we had to leave for Pittsburgh immediately to “evaluate
our options for delivering” the baby. I made the out of town hospital check yet
again and they got three doctors to confirm before I wholly accepted what had
happened. That acceptance finally brought some tears for me.&lt;/p&gt;

&lt;p&gt;Our baby. Our hopes. Our dreams. Gone.&lt;/p&gt;

&lt;h1&gt;Your Story&lt;/h1&gt;

&lt;p&gt;I intended to keep this largely private, and most details I will. However I
want to make some of this public because this sort of thing happens far more
often than I realized, and nothing can prepare you for the pain, sadness, and
hopelessness in that moment and days to follow learning your child is
stillborn. That being said, knowing what to face going in may help lessen the
repeated blows as they tell you what to expect and remind you what decisions
you have to make. My third child never got to see the world and leave their own
mark, so I want to ensure that their short life makes some positive impact to
honor them.&lt;/p&gt;

&lt;h1&gt;Hearing the News&lt;/h1&gt;

&lt;p&gt;Nothing I can say hear will lessen the hit. It fucking sucks and it will always
hurt, even when it’s just a memory. I can tell you that you and your partner
are not alone. Many people learn they’ve had a miscarriage or a stillborn and
will understand the pain you’re feeling. A surprising number of people you
already know may have experienced it and you’ve never known. I’m fortunate (as
fortunate as this sort of thing can be) in that I’ve known several people who
have experienced this. Talking through it with my oldest and dearest friend,
and hearing his experience, helped me greatly — I hope that you too have
someone close. Some people keep this close to the chest and haven’t told you
before they suffered this sort of loss; however, they may choose to open up to
you in order to help you through the process.&lt;/p&gt;

&lt;p&gt;There are also many organizations and support groups both online and in person
that you can reach out to and communicate with. These can be just as invaluable
as someone in your personal network. You may even make some lifelong friends
out of this experience.&lt;/p&gt;

&lt;p&gt;However you choose to do this, I cannot encourage you enough to not handle this
alone. It may feel like all you want to do, but bottling up your emotions may
prolong your grieving and pain. Please, please, talk to someone about what
you’re going through. At bare minimum, please communicate openly with your
partner.&lt;/p&gt;

&lt;h1&gt;Your Partner&lt;/h1&gt;

&lt;p&gt;This section is targeted primarily to men who are suffering a loss with their
partner, because I am highly under qualified to discuss this from the
perspective of a woman.&lt;/p&gt;

&lt;p&gt;This time is insanely hard for both you and your partner. Our instinct seems to
be to protect our partner, but when you both suffer the loss it’s important to
accept that at some point you need to grieve as well. For me, along with the
need to protect my wife, I didn’t feel justified in grieving nearly as hard as
she did — she carried the baby inside her for 20 weeks. They were never apart,
she would always talk to the baby, everything about her was changed in some way
by the baby, and even after death, the baby was still there. I can’t fathom how
hard this was on my wife and I’ve been with her every step of the way. From
numerous accounts, articles, friends, and from my wife herself, I was reminded
that I’m experiencing the loss as well and it’s okay and healthy to acknowledge
it.&lt;/p&gt;

&lt;p&gt;For the first several hours I was rather stoic and blank, trying my hardest to
comfort my wife and only trying to drive the process forward as we had to make
decisions, arrangements, and communication throughout the day. In one of the
hospital rooms my wife waiting for scans my wife and I were trying to research
how we could try to break the news to our daughters that this happened, and I
saw something mentioning that as the father I shouldn’t be afraid to show my
emotions, and not doing so may signal to my wife that I don’t care.&lt;/p&gt;

&lt;p&gt;I immediately asked my wife if I’ve come off as indifferent throughout the day,
not wanting to add to her pain if it was the case. My wife and I have been
married for nearly 6 years and together for over 15, so she assured me that she
knew I cared and knows how I get when situations go sideways. She did, however,
affirm that I can’t bottle my emotions up and that she’s not that only one that
suffered a loss. She told me to let myself grieve an not only be focused on
her. When I finally shed some tears after another interaction with the doctors,
she was there for me as I was for her — holding me tightly. It made her feel a
bit better knowing that she could help comfort me in the situation.&lt;/p&gt;

&lt;h1&gt;Telling Others&lt;/h1&gt;

&lt;p&gt;Adding to the pain of the situation is the fact that people may know you were
expecting a baby, but don’t know the baby is gone. This information is yours,
but unfortunately if people aren’t informed you’ll be hearing the questions
“How are along are you?”, “When is the baby due?”, “Is it a boy or girl” and
reliving it every time. We handled it by informing those closest to us and
letting them spread the news. For neighbors and friends I make sure I’m the one
they run into first so that I can give them the heads up so my wife doesn’t get
put into the situation.&lt;/p&gt;

&lt;p&gt;Outside of word-of-mouth, you may choose to notify multiple people at once via
Facebook or similar social networks (we opted not to). Or you may personally
want to tell people case-by-case. Do what feels right to you. And this brings
us to the hardest ones to tell.&lt;/p&gt;

&lt;h1&gt;Telling Your Children&lt;/h1&gt;

&lt;p&gt;Along with actually hearing the news about the death, telling our kids was the
hardest part. We agonized over how to tell them. Read countless articles
online, and I read some of the books on grief they gave us while my wife
napped. There are so many recommendations from different folk, but one theme
seems to be consistent: don’t sugar coat it or use confusing terms because they
will tend to take it literally. Things like “we lost the baby”, “the baby is
asleep and can’t wake up”, “the baby went to heaven”, or similar phreases imply
impermanent states. Most sources said to tell them and use real words, but
don’t disclose more than what they ask.&lt;/p&gt;

&lt;p&gt;For us, our girls are 5 and almost 3. When we got home from the hospital we
told them the baby wasn’t strong enough to be born and had died. I’m not going
to go into details of reactions, but they understood what happened and largely
handled the news well. Children are insanely resilient.&lt;/p&gt;

&lt;p&gt;Now, one thing I could never find was to how to tell children where the baby
physically went. I was panicking about this part because I didn’t know how to
answer it. I’m still unsure how they’ll react when we get the urn next week,
and how we’ll explain it. At the moment I think I’m going to explain that when
babies die and aren’t able to be born, they turn them into ash since their body
can’t survive.  The answer to this will also greatly depend on how you handle
the next part.&lt;/p&gt;

&lt;p&gt;Another thing I’ve read is to not shield them too much as they may come to
resent being left out. They suffered a loss too (assuming you told them or were
far enough to notice), and need to be able to grieve. If you do a memorial of
any sort, let them be involved. Let them make something for the baby if that’s
how they want to express themselves. It may seem hard, but it seems to really
help.&lt;/p&gt;

&lt;h2&gt;Warning: These next sections have details that are not easy to read and may be upsetting. Either stop now or be ready to proceed.&lt;/h2&gt;

&lt;h1&gt;How to Deliver&lt;/h1&gt;

&lt;p&gt;As if mothers haven’t been through enough, they still need to get the baby and
placenta out. I’m not going to tell you how we chose to handle it, because it’s
important that you and your partner handle it either the way you want, or the
way your health care provider tells you is medically safest. I am not qualified
to give recommendations.&lt;/p&gt;

&lt;p&gt;There are different options based on your situation. I can tell you they seem
very reluctant to perform a C-Section because despite it being performed
commonly, it’s a risky surgery that is often done for the sake of the safety of
the baby. Since the baby is no longer alive, they don’t want to risk the
mother. So that leaves two more common options.&lt;/p&gt;

&lt;h2&gt;Vaginal Delivery&lt;/h2&gt;

&lt;p&gt;A standard vaginal delivery is one of the options they’ll present as long as
there are no blocking risks. They’ll certainly offer an epidural and other
things to make the mother as comfortable as possible, but like any other option
this is not an easy process. If you’d like a chance to hold your child before
they are taken away, this is the most realistic option. Some people aren’t sure
whether they’d like to. Think hard on it and discuss it with your partner.
Decide whether this option is right for you and if the risks are worth it. This
next part is a bit gruesome, but I want you to be aware of it in case your
provider does not give you the warning. Make sure the sonography tech tells you
an estimate on how far along the baby was when it passed way. The placenta
doesn’t necessarily know the baby passed away right away, so delivering a
stillborn that passed away a day ago vs one that passed away a couple weeks
prior can be very different experiences. I know that’s not giving pleasant
imagery, and the thoughts of it were horrifying when the hospital listed
possibilities to us, but it’s important to know.&lt;/p&gt;

&lt;p&gt;They will likely offer to try to get you hand prints and foot prints for a
memory box.&lt;/p&gt;

&lt;h2&gt;D &amp;amp; E&lt;/h2&gt;

&lt;p&gt;This method is common for babies that pass away prior to 20 weeks, high-risk
pregnancies, or women who have had prior C-sections. In this procedure, it is
highly unlikely that you’ll be able to hold your child because they “evacuate
the pregnancy”, implying that they will almost always need to remove everything
from the uterus in pieces. This procedure is also extremely unpleasant to hear
and imagine, but they will tell you it is the safest for the mother. While it
is a short procedure (I think they said less than a half hour), it can take as
long as labor and delivery because they need to dilate the cervix to 2–3cm over
about a day and secure an operating room for the procedure.&lt;/p&gt;

&lt;p&gt;They will still offer you a memory box with handprints and footprints, and will
try hard to make it possible, but they caveat it with the fact that it may not
be possible to get the prints due to the way the procedure is done.&lt;/p&gt;

&lt;h1&gt;Autopsy&lt;/h1&gt;

&lt;p&gt;This part is at least as hard to stomach as the decision on delivery. Often
times the doctors have no idea why the baby passed away. They will take blood
from the mother and tissue from the pregnancy to do some testing, but those are
still not as conclusive as an autopsy. An autopsy will allow them to try to see
what may have happened in two different ways. They can do an external autopsy,
in which they will not harm the body (from what I can remember, I recommend
searching the web to confirm or asking your physician), but will take samples
that they can test further. This yields more information, but is still not as
informative as an internal autopsy. This is exactly what you think it is, more
or less like what you’ve seen on TV. They will cut into the body and examine
each organ in ways I don’t want to think about too much. It’s hard to picture,
but this is your best chance at finding out what happened to your baby.&lt;/p&gt;

&lt;p&gt;If you’re planning on having another baby, this kind of information can be
helpful to understand your chances of it happening again or what you can do to
prevent it (if anything). It can also be helpful in knowing if there is
anything hereditary that you need to be concerned about with your existing or
future children. The autopsy also helps research in discovering why some of
these things happen, and what people and doctors can do to prevent them in the
future.&lt;/p&gt;

&lt;p&gt;You need to choose what is right for you. It’s a hard choice with tradeoffs,
and there’s no getting around it.&lt;/p&gt;

&lt;h1&gt;Disposal&lt;/h1&gt;

&lt;p&gt;I’m sorry, that term sounds insensitive, but it is unfortunately the term that
will be used. From what I’ve read and what doctors told us (within Pennsylvania
at least), babies in the womb for less than 20 weeks have to be disposed of by
the hospital per regulation. From what I understand, the remains will be
cremated, but it will be done with others remain and buried together at a
cemetery. Evidently babies will be buried in a specified area at many
cemeteries. There will be no grave to visit in this situation. Above 20 weeks
you can choose to allow the hospital to dispose of the remains or you can
dispose of it. For fairly obvious reasons, if they perform a D &amp;amp; E they will
only allow you to have the remains cremated to avoid further trauma. If you
have a vaginal delivery you can decide whether to have a burial or cremation
(which you can choose to inter later).&lt;/p&gt;

&lt;p&gt;You’ll need select a funeral home to handle the remains. They will continually
ask you if you’ve decided on one — be sure to research and find one that will
work with you for your needs. Many will offer a heavy discount for stillborns
and deceased infants. The one we dealt with were incredibly kind, worked with
us, and gave us a deep discount. Usually the hospital will send in a social
worker to help you find a funeral home and tell you ones they partner with or
are known to offer discounts. If you need help affording the costs, there are
organizations like &lt;a href="http://emmasfootprints.com/"&gt;Emma’s Footprints&lt;/a&gt; that are
available to help you.&lt;/p&gt;

&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I sincerely hope you never have to deal with this sort of loss. Losing a baby
is hard no matter whether it’s an early miscarriage, half way through, or any
further along. It’s an odd feeling grieving a child you’ve never seen, but that
child is yours no matter what. You had hopes and dreams for that baby. You’ve
undoubtedly pictured what life would be like, what their life would be like as
they got older. You’ve thought about how he or she would play with their
siblings as they grew up together. Take the time you need to mourn your loss
the way you need to. The choices aren’t easy, especially given the pain you’ll
be in, but those decisions stay with you. Think as carefully as you can and do
what you think will be right for you and your family. My child had its life cut
short, but I’m hoping this article written based on that short life and death
will help you and others understand what is to come.&lt;/p&gt;

&lt;p&gt;I wish you all the best, and remember — you are not alone.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Taking a Step Back &amp; Scratching an Itch</title>
    <link rel="alternate" href="http://matthewmachuga.com/blog/2017/taking-a-step-back-scratching-an-itch.html"/>
    <id>http://matthewmachuga.com/blog/2017/taking-a-step-back-scratching-an-itch.html</id>
    <published>2017-08-13T20:00:00-04:00</published>
    <updated>2018-11-04T21:51:01-05:00</updated>
    <author>
      <name>Matthew Machuga</name>
    </author>
    <content type="html">&lt;p&gt;I’ve been spending the past two weeks adjusting to working at Auth0. Thus far
everything’s been great. The domain is interesting and challenging, the
problems are fun, and there are a &lt;strong&gt;lot&lt;/strong&gt; of smart people working here. While I’ve
been getting up to speed, I’ve been working on a new bit of functionality and
learning a few of our products. The one that’s been getting a lot of my time
this week is our &lt;a href="https://webtask.io"&gt;Webtask.io&lt;/a&gt; platform.&lt;/p&gt;

&lt;p&gt;The elevator pitch for &lt;a href="https://webtask.io"&gt;Webtask.io&lt;/a&gt; is that it allows you
to make serverless HTTP endpoints with Node. It’s a pretty neat concept,
similar to AWS Lamdbda or Google Cloud Functions. One thing that we do is allow
you to require a number of modules from npm without worrying about bundling
them yourself. For determining what packages are available, I’ve been utilizing
a solution developed by one of my coworkers, &lt;a href="https://twitter.com/tehsis"&gt;Pablo
Terradillos&lt;/a&gt;, hosted at
&lt;a href="https://tehsis.github.io/webtaskio-canirequire/"&gt;canirequire&lt;/a&gt;. &lt;code&gt;canirequire&lt;/code&gt;
lets anyone search for their favorite npm module to see if it’s already
available inside of a Webtask script. It’s been really handy and appreciated.&lt;/p&gt;

&lt;p&gt;Over the weekend I was trying to get a little bit further on my task at work,
when I realized I need to just take a step back and solve a different problem
for a while. My mind immediately went to converting canirequire to a CLI script
so that I could search for packages without leaving my terminal. After about 30
minutes of tinkering around, since Pablo had already taken care of any of the
challenging bits, I was able to publish
&lt;a href="https://www.npmjs.com/package/canirequire"&gt;canirequire-cli&lt;/a&gt;. All it really does it
call the webtask endpoint that tells me what packages we support, transform the
data a bit, and then run a regex search over the modules to see if any match
what I’m looking for. Once the search is done it simply returns a JSON response
and ends.&lt;/p&gt;

&lt;p&gt;The problem wasn’t hard at all, but it was enough to redirect my mind elsewhere
and scratch my own itch.&lt;/p&gt;

&lt;p&gt;If you want to put some code up on Webtask.io, give the package a try:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install -g canirequire-cli
$ canirequire request
{
 &amp;quot;request&amp;quot;: [
  &amp;quot;2.67.0&amp;quot;,
  &amp;quot;2.55.0&amp;quot;,
  &amp;quot;2.56.0&amp;quot;,
  &amp;quot;2.81.0&amp;quot;,
  &amp;quot;2.27.0&amp;quot;
 ],
 &amp;quot;request-progress&amp;quot;: [
  &amp;quot;0.3.1&amp;quot;
 ],
 &amp;quot;request-promise&amp;quot;: [
  &amp;quot;1.0.2&amp;quot;
 ],
 &amp;quot;request-replay&amp;quot;: [
  &amp;quot;0.3.0&amp;quot;
 ],
 &amp;quot;xmlhttprequest&amp;quot;: [
  &amp;quot;1.7.0&amp;quot;
 ]
}
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Compiling ES2017 with Babel for Node</title>
    <link rel="alternate" href="http://matthewmachuga.com/blog/2017/compiling-es2017-with-babel-for-node.html"/>
    <id>http://matthewmachuga.com/blog/2017/compiling-es2017-with-babel-for-node.html</id>
    <published>2017-08-06T20:00:00-04:00</published>
    <updated>2018-11-04T21:51:01-05:00</updated>
    <author>
      <name>Matthew Machuga</name>
    </author>
    <content type="html">&lt;p&gt;A long time ago I swore off compiling code I intended for NodeJS. I had
originally done this with some production CoffeeScript code back in 2013 and it
brought on a number of headaches — harder debugging, incompatibility with
modules, and extra indirection. I’m not entirely sure I’d call it a mistake;
CoffeeScript allowed us to move quickly with some advanced language features
that weren’t yet available in Node and that helped us build our app quickly.
However, those headaches I mentioned started to slow us down over time and I
quickly became jaded on the topic. After noticing at Auth0 we compile some code
at runtime with Babel, I figured I should open my mind and be willing to try
again.&lt;/p&gt;

&lt;p&gt;Node has most modern features implemented; however, once you get used to the
ES2015 module spec it can be challenging going back to the standard Node/Common
&lt;code&gt;require&lt;/code&gt;/&lt;code&gt;module.exports&lt;/code&gt; way of doing things. At Auth0 we also may have our
extensions running on an LTS version of NodeJS rather than the most recent
release so I’d rather ensure that features I expect to be present are, in fact,
available.&lt;/p&gt;

&lt;p&gt;Since some of our other extensions compile with Babel, I figured I’d fall in
line and try to create a new extension using the same pipeline. While some only
compile with the &lt;code&gt;es2015&lt;/code&gt; preset, I figured I’d go for &lt;code&gt;es2017&lt;/code&gt; because A: It’s
2017, and B: I wanted to ensure the spread ( &lt;code&gt;...&lt;/code&gt; ) operator was available in
whichever version of Node the service used.&lt;/p&gt;

&lt;h1&gt;Babel Configuration&lt;/h1&gt;

&lt;p&gt;The important part of the configuration lies with the &lt;code&gt;presets&lt;/code&gt; key. We use
&lt;code&gt;.babelrc&lt;/code&gt; for our Babel setup, so my file initially looked something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class="json"&gt;{
  &amp;quot;presets&amp;quot;: [&amp;quot;es2017&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I then, from another extension, borrowed a chunk of code to make Babel
transform things on the fly and shoved it into its own module at &lt;code&gt;lib/babel.js&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class="js"&gt;// Initialize Babel for the rest of the app

module.exports = function loadBabel() {
  require(&amp;#39;babel-register&amp;#39;)({
    sourceMaps: !(process.env.NODE_ENV === &amp;#39;production&amp;#39;)
  });
  require(&amp;#39;babel-polyfill&amp;#39;);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since performing this operation has a global side-effect, I wanted to make sure
I stuck it behind a function with an explicit name so that it was obvious what
I was doing when I imported the module and ran the function with near the top
of my &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class="js"&gt;const loadBabel = require(&amp;#39;./lib/babel&amp;#39;);
//...
loadBabel();

// Or, more condensed but less obvious:
require(&amp;#39;./lib/babel&amp;#39;)();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With that loaded I assumed I was good to go and tried to import another module.
We’ll say it was &lt;code&gt;import foo from &amp;#39;./bar&amp;#39;&lt;/code&gt;. I expected great things, but when I
ran the app with &lt;code&gt;node ./index.js&lt;/code&gt; I was greeted with an error:
&lt;code&gt;Syntax Error: Unexpected token import&lt;/code&gt; — &lt;code&gt;import&lt;/code&gt; wasn’t recognized and was invalid. This struck
me as odd and I spent somewhere around a half hour jumping around in my code
assuming I made a typo somewhere or wasn’t using &lt;code&gt;babel-register&lt;/code&gt; or
&lt;code&gt;babel-core/register&lt;/code&gt; correctly. I’ll save you the same steps, but my salvation
came in the form of a
&lt;a href="https://github.com/avajs/ava/issues/1139#issuecomment-264921916"&gt;GitHub issue comment&lt;/a&gt;
where a very logical, albeit not-obvious solution if you&amp;rsquo;ve only used &lt;code&gt;es2015&lt;/code&gt;, was given:
&lt;code&gt;es2017&lt;/code&gt; preset only compiles down to &lt;code&gt;es2016&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/1600/1*z0afYoDEuGcUyAc90zsGfw.gif" alt="Very logical, but not obvious" /&gt;&lt;/p&gt;

&lt;p&gt;If you’ve used Babel, this probably seems clear, at least after being stated. Or
perhaps, like me, you assumed &lt;code&gt;es2017&lt;/code&gt; to be packaged up to include &lt;code&gt;es2016&lt;/code&gt;
and &lt;code&gt;es2015&lt;/code&gt; presets by default. However, it is more logical that &lt;code&gt;es2017&lt;/code&gt; need
only be composed of things to compile down to the next lowest target. What if
the runtime supports &lt;code&gt;es2016&lt;/code&gt; and we only need a few features from &lt;code&gt;es2017&lt;/code&gt;?
Running passes over the code for lower targets would start dropping the target
to lower levels than what’s needed. No sense in doing more work, or potentially
de-optimizing code for lower targets. As such, that makes the choices for
&lt;code&gt;es2016&lt;/code&gt; and higher very logical and almost obvious (once you expect it).&lt;/p&gt;

&lt;p&gt;So we then have two ways to solve the problem. One way, if your version of Node
has all features from the ES2015 and ES2016 specs, is to simply import the
Babel plugin to handle ES2015
modules,babel-plugin-transform-es2015-modules-commonjs , and then add it to our
.babelrc file like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class="json"&gt;{
  &amp;quot;presets&amp;quot;: [&amp;quot;es2017&amp;quot;, &amp;quot;transform-es2015-modules-commonjs&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or we can take the more costly, but more inclusive, route of importing both
&lt;code&gt;es2016&lt;/code&gt; and &lt;code&gt;es2015&lt;/code&gt; presets from npm and including those in our &lt;code&gt;.babelrc&lt;/code&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code class="json"&gt;{
  &amp;quot;presets&amp;quot;: [
    &amp;quot;es2017&amp;quot;,
    &amp;quot;es2016&amp;quot;,
    &amp;quot;es2015&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will let all included presets perform their necessary duties and output
some ES5-friendly code at the end. I opted for the latter until I could verify
the version of Node on the servers, but once I reran my code with those presets
in place, the existing code and imports executed perfectly fine and I was ready
to write the rest of my modules as ES2015 ones.&lt;/p&gt;

&lt;p&gt;I hope this helps you debug your issue if you’ve landed here after searching
for &lt;code&gt;Syntax Error: Unexpected token import&lt;/code&gt;, or if you’re about to start a
project in Node or Browser JS, that this will save you some running around.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The End of an Era</title>
    <link rel="alternate" href="http://matthewmachuga.com/blog/2017/the-end-of-an-era.html"/>
    <id>http://matthewmachuga.com/blog/2017/the-end-of-an-era.html</id>
    <published>2017-05-29T20:00:00-04:00</published>
    <updated>2018-11-04T21:51:01-05:00</updated>
    <author>
      <name>Matthew Machuga</name>
    </author>
    <content type="html">&lt;h1&gt;tl;dr&lt;/h1&gt;

&lt;p&gt;My team at TTM was awesome, but due to acquisitions and reasons we are disbanding/disbanded. By October I’ll be out of a job, but will always be grateful for our team.&lt;/p&gt;

&lt;h1&gt;In the Beginning&lt;/h1&gt;

&lt;p&gt;Sometimes you find a job where everything feels right. For me, that has been the last four and a half years at Think Through Math.&lt;/p&gt;

&lt;p&gt;In the talks I’ve given, and to the people I’ve spoken with, I’ve always sung praises of my team and my job. Every day I’d go to work with a sense of purpose, knowing our product was making a tangible and measurable difference with students across the country. The individuals that made up the TTM Product Team are the most brilliant I’ve ever had the pleasure of working with. Most importantly our skills were better together.&lt;/p&gt;

&lt;h1&gt;But time waits for no man.&lt;/h1&gt;

&lt;p&gt;Think Through Math is now known by a different name under a different company. Skipping all details, we got acquired in fall 2016, had most of our employees let go, and those of us who were retained will be let go in October.&lt;/p&gt;

&lt;p&gt;Sadly, my tenure will never reach five years.&lt;/p&gt;

&lt;p&gt;This is not an article to discuss what happened, or to be a “woe is me” story. Those of us who were retained were treated well and incentivized to stay so I cannot complain. This article is to celebrate and share some of the traits that made our former team so incredible together.
Purpose&lt;/p&gt;

&lt;p&gt;One key principle of our team was that we were a group of teachers; we taught in classrooms, created articles or screencasts, tutored, or mentored. Our product is an augmentative tool for teaching math to students, so this kept us aligned with the goals of the company — to teach others. This helped instill a sense of ownership over the product since we were all invested in the end result — our students improving their math knowledge and learning abilities.&lt;/p&gt;

&lt;p&gt;We would keep this principle alive team-wide with “lunch and learns”, hosting meetups at our office, and sponsoring conferences thrown by members of the team. If one of us spoke at a conference, the company would pay any expenses the speaker may incur.&lt;/p&gt;

&lt;h1&gt;Self-Improvement&lt;/h1&gt;

&lt;p&gt;Our leadership would encourage us to continually improve our skills and further our knowledge. We were budgeted funds to acquire books, attend conferences, and allocated 10% of our work week to learn something new. We were taught to consider conference attendance as on-the-clock time, since we were continuing our education, and our time-off was reserved for actual time-off or sick days. When we wanted to learn a new skill that someone else on the team had, we would restructure project schedules and teams as best as possible to allow the individual to pair with the expert in that area.&lt;/p&gt;

&lt;h1&gt;People First&lt;/h1&gt;

&lt;p&gt;I felt valuable to both the team and company, and I valued everyone else more than I can describe. Everyone had such talent, but our empathy and understanding likely helped the most. If one of us was having an off day/week, or just had issues at home, the team was there to help get us into a better headspace and back on our feet. We’d pick up the slack in work when needed, and help bring the person back up to speed once they’d recovered.&lt;/p&gt;

&lt;p&gt;I had a few minor emergencies around the births of my children, and my wife had a particularly rough pregnancy with our second. In order to watch my oldest during the day while my wife was miserable, I wound up working very wonky hours. I apologized to our leadership as I explained the situation, and was told not to worry about it. Management shifted me onto tasks that could be picked off without keeping an entire project in my head, and the team was more than helpful in keeping me up to speed on things.&lt;/p&gt;

&lt;p&gt;They put people first. That meant the world to my family and to myself. It not only made things easier on my wife, but also ensured I wouldn’t lose my job for working outside of normalcy.&lt;/p&gt;

&lt;h1&gt;Leadership&lt;/h1&gt;

&lt;p&gt;I feel like I could, and want, to write a few articles on characteristics of great leaders. I’ve had opportunities to work for both great and awful bosses thus far in my career, and I feel that no matter how well I will never be able to express how great the leadership of our team was at TTM.&lt;/p&gt;

&lt;p&gt;The leaders of a team set the tone for environment and culture of a team. As mentioned, ours put people first. They helped the members of the team grow as individuals, and cared for them like the humans they were. They fostered the culture that reminded us we should never feel guilty for having to tend to ourselves or our family, there is life outside of work and we were encouraged to enjoy it. They reinforced the idea that we should trust one another to be accountable for our own work and not feel the need to micromanage.&lt;/p&gt;

&lt;p&gt;Needing to take a few hours off work to run to an appointment, get your car fixed, or pick your kids up was never frowned upon, or even remotely questioned. I was overly cautious with taking time away from my desk (remote employee) for a while and my CTO just patiently reminded me every time that I didn’t need to ask him to take time away for things — just tell whoever I’m working with that I’ll be away for a bit so they knew what to expect and that was good enough.&lt;/p&gt;

&lt;p&gt;Our leaders, the CTO and VP of Product Development, were a powerful duo. They were not governed by fear, but rather by compassion and empathy. They helped keep the mood and culture on the team very positive. We celebrated our wins, collectively owned failure, and constantly reflected on how we could improve. They were also very good at managing interactions with the rest of the company. Hours of needless work were prevented by properly investigating requests or complaints to determine if they actually required developer intervention — only then involving us.&lt;/p&gt;

&lt;p&gt;I’m certainly leaving things out, and will never be able to properly express my thanks to them, but I’m positive they both know how important they were to me.&lt;/p&gt;

&lt;h1&gt;Teamwork and Camaraderie&lt;/h1&gt;

&lt;p&gt;Through the sense of ownership, passion for learning and teaching, positive culture, our team was very close. Including each other at pool parties, group meals both in and out of work, support at community events, board games, weddings, and more helped us bond closely. Coworkers are an extended family — you spend 40hrs a week with them, so having some kind of cohesion is important. We still all chat via Slack and sporadically meet up for lunch during the week. Many from our team even work with each other again at another company.&lt;/p&gt;

&lt;p&gt;As remote developer number one on our team, I was admittedly a bit nervous at how well I’d bond with a team that was otherwise co-located in Pittsburgh. This concern was very quickly dismissed between daily standup meetings via video conferencing giving me face time with the team, and every visit turning into a mini reunion. Living about 2hrs away meant that I was fortunate enough to be able to visit monthly without much effort, and each time was filled with hugs, a group lunch, and a ton of laughs.&lt;/p&gt;

&lt;p&gt;Having a team that was on board with helping out the remote employee, and those that worked from home that day, by communicating frequently over HipChat/Slack aided in my inclusion dramatically. It also helped our coworkers who moved to cities far away adapt to their new-found remote lifestyle. A little bit of friendship, compassion, and empathy can go a long way and cannot be understated.&lt;/p&gt;

&lt;p&gt;While the job itself was fantastic, I’ll miss our team the most.&lt;/p&gt;

&lt;h1&gt;Reflection&lt;/h1&gt;

&lt;p&gt;I’ve come a long way since I first started at TTM. I started off unfamiliar with how to properly operate or hack on a product with millions of users and a huge amount of traffic. Let alone this was only the second codebase I’d worked on of comparable size. They helped make me a better developer, a better learner, a better mentor, and a better person. This job and team have helped me grow in so many professional and personal ways, and I’m ever grateful for that.&lt;/p&gt;

&lt;p&gt;I loved my job, I truly did. I’d wake up every morning excited to be doing something positive with people I respected, admired, and cared for. I had purpose, I had challenges, and I had friendship. While most of our team has disbanded, I’m glad the friendship remains.&lt;/p&gt;

&lt;p&gt;Our team was also there for me through most of my biggest moments in my adult life. When I was just shy of 26yrs old, less than a month after I started at TTM, my first daughter was born. My CTO and coworkers were some of the first to offer parenting tips (and the first I’d go to for help). They were there to assure me I’m not screwing things up. A while later my family bought our first home, and then eventually had our second daughter. My team watched my daughters grow up (our family and pets frequented our standup meetings), and I’ve seen a number of their kids and families grow as well.&lt;/p&gt;

&lt;p&gt;After having worked with such an incredible team for so long, I find myself questioning if I have already passed my “glory days”. It’s certainly the best job I’ve had to date, but I am hopeful for a new adventure to come.&lt;/p&gt;

&lt;p&gt;I’m not entirely sure where I’m headed yet, but I have until October to sort it all out. I guess I’m ultimately looking for somewhere I can help make a difference, lead or mentor, learn, and solve interesting challenges with brilliant minds.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Setting up a Quick Dev Environment for React, ES2015, Babel, and Webpack</title>
    <link rel="alternate" href="http://matthewmachuga.com/blog/2015/setting-up-a-quick-dev-environment-for-react-es2015-babel-and-webpack.html"/>
    <id>http://matthewmachuga.com/blog/2015/setting-up-a-quick-dev-environment-for-react-es2015-babel-and-webpack.html</id>
    <published>2015-11-01T06:51:00-05:00</published>
    <updated>2018-11-04T21:51:01-05:00</updated>
    <author>
      <name>Matthew Machuga</name>
    </author>
    <content type="html">&lt;p&gt;This is going to be short and sweet.  I couldn&amp;rsquo;t find a tutorial that spelled out a way to get a barebones environment setup for React using webpack and ES2015 without something being missing.  This is due in part to the fact that Babel has recently integrated JSX into its core, split things out into more packages, etc.  So here are a list of steps and brief explanations I found from a number of tutorials, namely &lt;a href="https://robots.thoughtbot.com/setting-up-webpack-for-react-and-hot-module-replacement"&gt;this one from Thoughtbot&lt;/a&gt;, &lt;a href="https://www.twilio.com/blog/2015/08/setting-up-react-for-es6-with-webpack-and-babel-2.html"&gt;this one from Twilio&lt;/a&gt;, and finally by just reading Babel and React documentation.&lt;/p&gt;

&lt;h2&gt;Assumptions&lt;/h2&gt;

&lt;p&gt;You are running on OSX or Linux with node + npm installed, with node at at &lt;em&gt;least&lt;/em&gt; version 0.12.x - I&amp;rsquo;m running 4.2.1.&lt;/p&gt;

&lt;h2&gt;Create a new project&lt;/h2&gt;

&lt;p&gt;Create new directory &lt;code&gt;newapp&lt;/code&gt; with a subdirectory named &lt;code&gt;app&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="bash"&gt;mkdir -p newapp/app
cd newapp
npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you run &lt;code&gt;npm init&lt;/code&gt; it will prompt you to fill out information about your project.  You can just feed it nonsense for now if you&amp;rsquo;d like to just get through it for test purposes.&lt;/p&gt;

&lt;h2&gt;Install dependencies&lt;/h2&gt;

&lt;h3&gt;Babel&lt;/h3&gt;

&lt;pre&gt;&lt;code class="bash"&gt;npm install babel-cli babel-core babel-preset-es2015 babel-preset-react --save-dev
echo &amp;#39;{\n  &amp;quot;presets&amp;quot;: [&amp;quot;es2015&amp;quot;, &amp;quot;react&amp;quot;]\n}&amp;#39; &amp;gt; .babelrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lots of Babel packages!  Let&amp;rsquo;s run through these quickly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;babel-core&lt;/code&gt;: Installs Babel itself for usage by other libraries and apps&lt;/li&gt;
&lt;li&gt;&lt;code&gt;babel-cli&lt;/code&gt;: Installs the Babel CLI tool that you can use for compiling, debugging, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;babel-preset-es2015&lt;/code&gt;: Installs the plugins available for to compile ES2015 syntax and functionality into ES5.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;babel-preset-react&lt;/code&gt;: Installs the plugins available for transforming JSX and Flow syntax/types into ES5. If you don&amp;rsquo;t know what &lt;a href="http://flowtype.org/"&gt;Flow&lt;/a&gt; is, you can completely ignore that extra bit of info.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also include a snippet there to create a .babelrc file to load up the &lt;code&gt;es2015&lt;/code&gt; and &lt;code&gt;react&lt;/code&gt; plugins.  This could also just be done in the webpack config, but then it wouldn&amp;rsquo;t be available from the CLI so I prefer this method.&lt;/p&gt;

&lt;h3&gt;Webpack&lt;/h3&gt;

&lt;p&gt;Run this next installation command&lt;/p&gt;

&lt;pre&gt;&lt;code class="bash"&gt;npm install webpack babel-loader file-loader webpack-dev-server --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will install Webpack along with its Babel integration.  Next &lt;code&gt;file-loader&lt;/code&gt; is a basic file loader for loading static assets into the &lt;code&gt;dist&lt;/code&gt; directory so everything is one relative location.  Finally I loaded up the &lt;code&gt;webpack-dev-server&lt;/code&gt; just to make things simple to play with.  You can really use any web server to serve from your &lt;code&gt;dist&lt;/code&gt; directory, but to get up and running quickly go ahead and use this.&lt;/p&gt;

&lt;p&gt;Next create &lt;code&gt;webpack.config.js&lt;/code&gt; in the root path next to &lt;code&gt;package.json&lt;/code&gt;, and edit your config to look like this.&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;module.exports = {
  context: __dirname + &amp;quot;/app&amp;quot;,
  entry: {
    javascript: &amp;quot;./app.js&amp;quot;,
    html: &amp;quot;./index.html&amp;quot;,
  },
  output: {
    filename: &amp;quot;app.js&amp;quot;,
    path: __dirname + &amp;quot;/dist&amp;quot;
  },
  module: {
    loaders: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        loaders: [&amp;quot;babel-loader&amp;quot;]
      },
      {
          test: /\.html$/,
          loader: &amp;quot;file?name=[name].[ext]&amp;quot;,
      },
    ]
  }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This makes the assumption you want to store your JS in &lt;code&gt;app&lt;/code&gt; and want it to compile to &lt;code&gt;dist&lt;/code&gt;.  If you&amp;rsquo;d like to change this, feel free. We&amp;rsquo;ve also told it to move &lt;code&gt;.html&lt;/code&gt; files into the &lt;code&gt;dist&lt;/code&gt; folder, and for &lt;code&gt;babel-loader&lt;/code&gt; to be responsible for loading up and &lt;code&gt;js&lt;/code&gt; or &lt;code&gt;jsx&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll create the related files in a moment, but we have one more dependency installation step left.&lt;/p&gt;

&lt;h3&gt;React&lt;/h3&gt;

&lt;pre&gt;&lt;code class="bash"&gt;npm install react react-dom --save
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As specified by the &lt;a href="https://facebook.github.io/react/downloads.html#npm"&gt;React Documentation&lt;/a&gt;, we need both the &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; packages in order to utilize React, since &lt;code&gt;React.render&lt;/code&gt;, amongst other things were moved out to the &lt;code&gt;react-dom&lt;/code&gt; package.&lt;/p&gt;

&lt;h2&gt;Testing&lt;/h2&gt;

&lt;p&gt;Okay now that dependencies are installed, we can give some test runs.&lt;/p&gt;

&lt;p&gt;Create a new file &lt;code&gt;app/index.html&lt;/code&gt; and copy/paste this HTML:&lt;/p&gt;

&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Webpack, Babel, and React!&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
  &amp;lt;script src=&amp;quot;app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a new file &lt;code&gt;app/app.js&lt;/code&gt; and copy/paste the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class="javascript"&gt;import React from &amp;quot;react&amp;quot;;
import ReactDOM from &amp;quot;react-dom&amp;quot;;

ReactDOM.render(
  &amp;lt;div&amp;gt;Hello!&amp;lt;/div&amp;gt;,
  document.body
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to verify that we have everything needed to use Babel and React, we&amp;rsquo;re going to run&lt;/p&gt;

&lt;pre&gt;&lt;code class="bash"&gt;babel app/app.js --presets react
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the event &lt;code&gt;babel&lt;/code&gt; can&amp;rsquo;t be found because something got weird with your path, you can also invoke this with&lt;/p&gt;

&lt;pre&gt;&lt;code class="bash"&gt;./node_modules/babel-cli/bin/babel.js app/app.js --presets react
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If everything worked as expected, you&amp;rsquo;ll see a printout of the compiled file appear below the command in your shell.&lt;/p&gt;

&lt;p&gt;Next we can move on to trying out the whole thing.&lt;/p&gt;

&lt;p&gt;If you want to have the command available globally, you can install the &lt;code&gt;webpack-dev-server&lt;/code&gt; globally by running &lt;code&gt;npm install -g webpack-dev-server&lt;/code&gt;.  Otherwise, open up &lt;code&gt;package.json&lt;/code&gt;, locate the &lt;code&gt;scripts&lt;/code&gt; object, and add &lt;code&gt;&amp;quot;start&amp;quot;: &amp;quot;webpack-dev-server --progress --colors&amp;quot;&lt;/code&gt; to it.  It should look something like this when you&amp;rsquo;re done.&lt;/p&gt;

&lt;pre&gt;&lt;code class="json"&gt;&amp;quot;scripts&amp;quot;: {
  &amp;quot;start&amp;quot;: &amp;quot;webpack-dev-server --progress --colors&amp;quot;,
  &amp;quot;test&amp;quot;: &amp;quot;echo \&amp;quot;Error: no test specified\&amp;quot; &amp;amp;&amp;amp; exit 1&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So if you&amp;rsquo;ve installed it globally, run &lt;code&gt;webpack-dev-server --progress --colors&lt;/code&gt;, otherwise simply run &lt;code&gt;npm start&lt;/code&gt;.  This will start the dev server, compiling everything and launching the server at &lt;code&gt;http://localhost:8080&lt;/code&gt;, where once you navigate to in your browser, you should see &amp;ldquo;Hello!&amp;rdquo; displayed correctly.&lt;/p&gt;

&lt;h3&gt;Go Have Fun!&lt;/h3&gt;

&lt;p&gt;Now you have the barebones setup to start working with React and Babel via Webpack, so have fun and experiment.  Hopefully my morning of digging and trial-and-error can help you nail this on the first try.&lt;/p&gt;
</content>
  </entry>
</feed>
